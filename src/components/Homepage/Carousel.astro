---
import { Image } from "astro:assets";
import CarouselImage from "./CarouselImage.astro";
import type { ImageMetadata } from "astro";

interface Props {
  images: {
    src: ImageMetadata;
    alt: string;
    heightClass?: string;
  }[];
}

const { images } = Astro.props;
---

<div class="mt-6 md:mt-14 relative overflow-hidden w-full">
  <div class="carousel-scroll flex gap-8 items-center" id="carousel">
    {
      [...Array(2)].map(() => (
        <div class="flex gap-8 sm:gap-16 items-center min-w-max pr-4 sm:pr-8">
          {images.map((image) => (
            <div class="relative">
              <CarouselImage src={image.src} alt={image.alt} heightClass={image.heightClass} />
            </div>
          ))}
        </div>
      ))
    }
  </div>

  <style>
    @keyframes scroll {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(-50%);
      }
    }
    .carousel-scroll {
      display: flex;
      width: max-content;
      animation: scroll 30s linear infinite;
    }
    @media (min-width: 768px) {
      .carousel-scroll {
        animation: scroll 30s linear infinite;
      }
    }
    .carousel-paused {
      animation-play-state: paused;
    }
  </style>
</div>
<!-- This script is used to pause the carousel when the mouse is over it or tap on mobile -->
<script>
  const carousel = document.getElementById("carousel");
  let isPaused = false;

  const mediaQuery = window.matchMedia("(hover: hover)");
  if (mediaQuery.matches) {
    carousel?.addEventListener("mouseenter", () => {
      carousel.classList.add("carousel-paused");
    });

    carousel?.addEventListener("mouseleave", () => {
      carousel.classList.remove("carousel-paused");
    });
  }

  carousel?.addEventListener("click", () => {
    isPaused = !isPaused;
    carousel.classList.toggle("carousel-paused", isPaused);
  });
</script>
