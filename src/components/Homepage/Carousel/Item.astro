---
import { Image } from "astro:assets";
import tickIcon from "../../../assets/icons/tick.svg";
import "./ItemFrame.css";

interface Item {
  type: string;
  source: string;
  bottomWidth?: number;
  padding?: number;
}

interface TextItem extends Item {
  type: "text";
  message: string;
}

interface ImageItem extends Item {
  type: "image";
  imageSrc: ImageMetadata;
  imageAlt: string;
}

type Props = TextItem | ImageItem;

const { type, source, bottomWidth = 30, padding = 40, ...rest } = Astro.props;

const message = type === "text" ? (rest as TextItem).message : "";
// For image items, imageSrc is guaranteed to exist by our type system
const imageSrc =
  type === "image" ? (rest as ImageItem).imageSrc : (null as unknown as ImageMetadata);
const imageAlt = type === "image" ? (rest as ImageItem).imageAlt : "";
---

<div class="relative pb-3">
  <div
    class="pixelated-frame pt-3 text-center mx-auto bg-black text-white font-semibold font-mono text-sm"
    style={`--bottom-segment-width: ${bottomWidth}px; padding-left: ${padding}px; padding-right: ${padding}px;`}
  >
    <!-- Frame parts -->
    <div class="frame-part top-bar"></div>
    <div class="frame-part top-right-corner"></div>
    <div class="frame-part bottom-right-corner"></div>
    <div class="frame-part bottom-left-segment"></div>
    <div class="frame-part bottom-right-segment"></div>
    <div class="frame-part bottom-left-corner"></div>
    <div class="frame-part top-left-corner"></div>
    <div class="frame-part left-bar"></div>
    <div class="frame-part right-bar"></div>

    <!-- Banner content based on type -->
    {
      type === "image" && (
        <div class="py-1">
          <Image src={imageSrc} alt={imageAlt} />
        </div>
      )
    }

    <p>{message}</p>
    <div class="flex items-center justify-center translate-y-2">
      <span class="font-normal">{source}</span>
      <Image src={tickIcon} alt="Verified" class="ml-1" />
    </div>
  </div>
</div>
