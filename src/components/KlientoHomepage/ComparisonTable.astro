---
interface Feature {
  name: string;
  kliento: boolean;
  apiKeys: boolean;
  jwts: boolean;
  spiffe: boolean;
}

interface ColumnHeader {
  name: string;
}

interface Props {
  features: Feature[];
  columnHeaders: ColumnHeader[];
}

const { features, columnHeaders } = Astro.props;

const headerCellClass = "py-2 lg:py-3 px-4 text-center bg-neutral-700";
const rowCellClass = "py-2 lg:py-3 px-4 text-center";
const checkmarkClass = "text-green-500";
const crossClass = "text-red-500";
---

<div>
  <table
    class="w-full border-collapse bg-neutral-900 text-white border-neutral-700 border-l-1 border-r-1"
  >
    <thead class="text-base font-normal">
      <tr class="border-b border-neutral-700">
        <th class={headerCellClass + " text-left"}>{columnHeaders[0].name}</th>
        <th class={headerCellClass + " bg-neutral-800"}>{columnHeaders[1].name}</th>
        <th class={headerCellClass}>{columnHeaders[2].name}</th>
        <th class={headerCellClass}>{columnHeaders[3].name}</th>
        <th class={headerCellClass}>{columnHeaders[4].name}</th>
      </tr>
    </thead>
    <tbody>
      {
        features.map((feature) => (
          <tr class="border-b border-neutral-700">
            <td class="py-4 px-4 text-sm">{feature.name}</td>
            <td class={rowCellClass + " bg-neutral-800"}>
              {feature.kliento ? (
                <span class={checkmarkClass}>✓</span>
              ) : (
                <span class={crossClass}>✗</span>
              )}
            </td>
            <td class={rowCellClass}>
              {feature.jwts ? (
                <span class={checkmarkClass}>✓</span>
              ) : (
                <span class={crossClass}>✗</span>
              )}
            </td>
            <td class={rowCellClass}>
              {feature.apiKeys ? (
                <span class={checkmarkClass}>✓</span>
              ) : (
                <span class={crossClass}>✗</span>
              )}
            </td>
            <td class={rowCellClass}>
              {feature.spiffe ? (
                <span class={checkmarkClass}>✓</span>
              ) : (
                <span class={crossClass}>✗</span>
              )}
            </td>
          </tr>
        ))
      }
    </tbody>
  </table>
</div>
